{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","captalize","msg","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","aboutText","body","onShowAlert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.eda86c3f.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n// import { Link } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props){\r\n    return(\r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" aria-disabled=\"true\">Disabled</a>\r\n        </li> */}\r\n      </ul>\r\n      <form className=\"d-flex mx-4\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n\r\n      <div className={`form-check form-switch text-${props.mode === 'light'?'dark' : 'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Enter Title',\r\n    about : 'Enter About'\r\n}","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClicked = () =>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert('Converted to Upper Case','success')\r\n  }\r\n\r\n  const handlelowClicked = () =>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert('Converted to Lower Case','success')\r\n    \r\n  }\r\n\r\n  const handleClearClicked = () =>{\r\n    let newText = \"\";\r\n    setText(newText)\r\n    props.showAlert('Text Cleared','success')\r\n  }\r\n\r\n  const handleOnChange = (event) =>{\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    // text.setSelectionRange(0,9999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert('Copied to clipboard','success')\r\n  }\r\n\r\n  const handleExtraSpaces =() => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert('Extra spaces removed','success')\r\n\r\n  }\r\n\r\n  const [text,setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className='container' style={{color : props.mode === 'dark'?'white' : 'black'}}>\r\n      <h1>{props.heading}</h1>\r\n       <div className=\"mb-3\">\r\n          {/* <label for=\"myBox\" class=\"form-label\">Email address</label> */}\r\n          <textarea className=\"form-control\" id='myBox' rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'grey' : 'white',color : props.mode === 'dark'?'white' : 'black'}}> </textarea>\r\n          {/* <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div> */}\r\n       </div>\r\n       <button className='btn btn-primary mx-2' onClick={handleUpClicked}>Convert to Uppercase</button>\r\n       <button className='btn btn-primary mx-2' onClick={handlelowClicked}>Convert to Lowercase</button>\r\n       <button className='btn btn-primary mx-2' onClick={handleClearClicked}>Clear Text</button>\r\n       <button className='btn btn-primary mx-2' onClick={handleCopy}>Copy Text</button>\r\n       <button className='btn btn-primary mx-2 my-4' onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n       \r\n    </div>\r\n    <div className='container my-3' style={{color : props.mode === 'dark'?'white' : 'black'}}>\r\n      <h2>Your Text Summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:'Enter something in the text box above to preview'}</p>\r\n\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  const captalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role='alert'> \r\n        <strong>{captalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        {/* <strong>Hello Jayachandra</strong> you should check in on some of those feilds below. */}\r\n        \r\n    </div>\r\n  )\r\n}\r\n","// import React from \"react\"\n// import Navbar from \"./components/Navbar\"\n//import Covid from \"./components/covid\"\nimport './App.css';\nimport React, { useState } from 'react'\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Routes,\n//   withRouter,\n//   Link\n// } from \"react-router-dom\";\n\n\n\n\nconst App = () => {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) =>{\n\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n      \n    }, 1500);\n\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743'\n      showAlert('Dark mode has been enabled','success')\n      document.title = 'Jayachandra - Darkmode'\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Light mode has been enabled','success')\n      document.title = 'Jayachandra - Lightmode'\n    }\n  }\n\n  return(\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Jayachandra\" aboutText = \"About\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert = {alert}/>  \n      <div className=\"container my-3\">\n        {/* <Switch>    */}\n          \n          {/* <Route path=\"/about\">\n            <About/>\n          </Route> */}\n          {/* <Route path=\"/\"> */}\n            <TextForm heading=\"Enter the text to analyze below\" onShowAlert={showAlert}/>\n          {/* </Route> */}\n          \n        {/* </Switch> */}\n      </div>\n   {/* </Router> */}\n     \n      \n    \n      \n    </>\n  )\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}